//Generated by wsdl2apex

public class AsyncSchemasFerrantiBeAxMecomsCmService {
// Commenting out the Code to increase Code coverage as this is Mecom Class
    /*
    public class MeterReadingServicePreviousMeterReadingResponse_elementFuture extends System.WebServiceCalloutFuture {
        public schemasDatacontractOrg200407Dynamic.ArrayOfDevice getValue() {
            schemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingResponse_element response = (schemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingResponse_element)System.WebServiceCallout.endInvoke(this);
            return response.response;
        }
    }
    public class AsyncBasicHttpBinding_ITwoWayAsync {
        public String endpoint_x = 'http://144.36.167.58/ARPUDev/MessageHandler.svc';
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://schemas.microsoft.com/2003/10/Serialization/Arrays', 'schemasMicrosoftCom200310Serializat', 'http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services', 'schemasDatacontractOrg200407Microso', 'http://schemas.microsoft.com/dynamics/2008/01/documents/Fault', 'schemasMicrosoftComDynamics200801D', 'http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application', 'schemasDatacontractOrg200407Dynamic', 'http://schemas.microsoft.com/2003/10/Serialization/', 'schemasMicrosoftCom200310Serializat', 'http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp', 'schemasDatacontractOrg200407Microso', 'http://schemas.microsoft.com/dynamics/2010/01/datacontracts', 'schemasMicrosoftComDynamics201001D', 'http://schemas.ferranti.be/ax/mecoms/cm/services', 'schemasFerrantiBeAxMecomsCmService'};
        public AsyncSchemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingResponse_elementFuture beginProcessRequest(System.Continuation continuation,schemasDatacontractOrg200407Dynamic.ArrayOfConnection x_connections,DateTime x_startDate,DateTime x_endDate) {
            schemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingRequest_element request_x = new schemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingRequest_element();
            request_x.x_connections = x_connections;
            request_x.x_startDate = x_startDate;
            request_x.x_endDate = x_endDate;
            return (AsyncSchemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingResponse_elementFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncSchemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingResponse_elementFuture.class,
              continuation,
              new String[]{endpoint_x,
              'ProcessRequest',
              'http://schemas.ferranti.be/ax/mecoms/cm/services',
              'MeterReadingServicePreviousMeterReadingRequest',
              'http://schemas.ferranti.be/ax/mecoms/cm/services',
              'MeterReadingServicePreviousMeterReadingResponse',
              'schemasFerrantiBeAxMecomsCmService.MeterReadingServicePreviousMeterReadingResponse_element'}
            );
        }
    }
    */
    //End of Comment
}